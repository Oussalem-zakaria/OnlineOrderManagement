services:
  # Eureka server service
  eureka-server:
    build: ./eureka-server
    container_name: eureka-server
    ports:
      - "8761:8761"
    expose:
      - "8761"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 10s
      retries: 4
      start_period: 30s
    networks:
      - app-network

  # Config server service
  config-server:
    build: ./config-server
    container_name: config-server
    ports:
      - "8888:8888"
    expose:
      - "8888"
    environment:
      - DISCOVERY_SERVICE_URL=http://eureka-server:8761/eureka
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
      interval: 10s
      retries: 4
      start_period: 30s
    depends_on:
      eureka-server:
        condition: service_healthy
    networks:
      - app-network

  # PostgreSQL for microservices
  postgres-db:
    image: postgres:13
    container_name: postgres-db
    environment:
      POSTGRES_DB: ordersdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres", "-d", "ordersdb"]
      interval: 10s
      retries: 5
      start_period: 30s
    networks:
      - app-network

  # PostgreSQL for Keycloak
  keycloak-db:
    image: postgres:13
    container_name: keycloak-db
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak_password
    volumes:
      - keycloak_pgdata:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "keycloak", "-d", "keycloak"]
      interval: 10s
      retries: 5
      start_period: 30s
    networks:
      - app-network

  # Keycloak service
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    command: start-dev --import-realm
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: adminpassword
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak_password
    volumes:
      - ./keycloak-export:/opt/keycloak/data/import
    ports:
      - "8080:8080"
    depends_on:
      keycloak-db:
        condition: service_healthy
    networks:
      - app-network

  # Order service
  order-service:
    build: ./order
    container_name: order-service
    ports:
      - "8083:8083"
    expose:
      - "8083"
    environment:
      - DISCOVERY_SERVICE_URL=http://eureka-server:8761/eureka
      - CONFIG_SERVICE_URL=http://config-server:8888
      - ADMIN_SERVER_URL=http://admin-server:8085
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-db:5432/ordersdb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=password
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/actuator/health"]
      interval: 10s
      retries: 4
      start_period: 30s
    depends_on:
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      postgres-db:
        condition: service_healthy
    networks:
      - app-network

  # user service
  customer-service:
    build: ./customer
    container_name: customer-service
    ports:
      - "8081:8081"
    expose:
      - "8081"
    environment:
      - DISCOVERY_SERVICE_URL=http://eureka-server:8761/eureka
      - CONFIG_SERVICE_URL=http://config-server:8888
      - ADMIN_SERVER_URL=http://admin-server:8085
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-db:5432/ordersdb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=password
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 10s
      retries: 4
      start_period: 30s
    depends_on:
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      postgres-db:
        condition: service_healthy
    networks:
      - app-network

  # Product service
  product-service:
    build: ./product
    container_name: product-service
    ports:
      - "8082:8082"
    expose:
      - "8082"
    environment:
      - DISCOVERY_SERVICE_URL=http://eureka-server:8761/eureka
      - CONFIG_SERVICE_URL=http://config-server:8888
      - ADMIN_SERVER_URL=http://admin-server:8085
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-db:5432/ordersdb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=password
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 10s
      retries: 4
      start_period: 30s
    depends_on:
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      postgres-db:
        condition: service_healthy
    networks:
      - app-network

  audit-service:
    build: ./audit
    container_name: audit-service
    ports:
      - "8084:8084"
    expose:
      - "8084"
    environment:
      - DISCOVERY_SERVICE_URL=http://eureka-server:8761/eureka
      - CONFIG_SERVICE_URL=http://config-server:8888
      - ADMIN_SERVER_URL=http://admin-server:8085
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-db:5432/ordersdb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=password
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 10s
      retries: 4
      start_period: 30s
    depends_on:
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      postgres-db:
        condition: service_healthy
    networks:
      - app-network

  # Gateway service
  gateway-service:
    build: ./api-gateway
    container_name: gateway-service
    ports:
      - "8765:8765"
    expose:
      - "8765"
    environment:
      - DISCOVERY_SERVICE_URL=http://eureka-server:8761/eureka
      - CONFIG_SERVICE_URL=http://config-server:8888
      - ADMIN_SERVER_URL=http://admin-server:8085
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8765/actuator/health"]
      interval: 10s
      retries: 4
      start_period: 30s
    depends_on:
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    networks:
      - app-network

  # Admin server (commented out)
  # admin-server:
  #   build: ./admin-server
  #   container_name: admin-server
  #   ports:
  #     - "8085:8085"
  #   expose:
  #     - "8085"
  #   environment:
  #     - DISCOVERY_SERVICE_URL=http://eureka-server:8761
  #     - CONFIG_SERVICE_URL=http://config-server:8888
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:8085/actuator/health"]
  #     interval: 10s
  #     retries: 4
  #     start_period: 30s
  #   depends_on:
  #     eureka-server:
  #       condition: service_healthy
  frontend:
    build:
      context: ./keycloak-react-example
      dockerfile: Dockerfile
    ports:
      - "3000:80" # Mappe le port 80 (NGINX) au port 3000 de votre machine
    networks:
      - app-network
    depends_on:
      - config-server
      - eureka-server
      - order-service

# Volumes for PostgreSQL data persistence
volumes:
  pgdata:
  keycloak_pgdata:

# Networks for communication between services
networks:
  app-network:
    driver: bridge